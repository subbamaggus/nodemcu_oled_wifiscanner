#include <SPI.h>
#include <Wire.h>
#include <Adafruit_SSD1306.h>
#include <ESP8266WiFi.h>
 
#define OLED_ADDR 0x3C
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

#define Y_START_YELLOW 0
#define Y_START_BLUE 17

//------------------------------------------------------------------------------
// File generated by LCD Assistant
// http://en.radzio.dxp.pl/bitmap_converter/

const unsigned char PROGMEM lock [] = {
0x00, 0x18, 0x24, 0x7E, 0x7E, 0x7E, 0x7E, 0x00, 
};

const unsigned char bars_0 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 
};

const unsigned char bars_1 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x55, 
};

const unsigned char bars_2 [] = {
0x00, 0x00, 0x00, 0x04, 0x04, 0x14, 0x14, 0x55, 
};

const unsigned char bars_3 [] = {
0x00, 0x01, 0x01, 0x05, 0x05, 0x15, 0x15, 0x55,
};

//------------------------------------------------------------------------------

int16_t cursor_x = 22;
int16_t cursor_y = 15;

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT);

void setup() {
 
  display.begin( SSD1306_SWITCHCAPVCC, OLED_ADDR);

  WiFi.mode(WIFI_STA);
  WiFi.disconnect();

  Serial.begin(9600);

  delay(2000); 
}

void draw_lock() {
  display.drawBitmap(0, cursor_y - 1, lock, 8, 8, 1);
}

void draw_signal_strength(int strength) {
  Serial.print(strength); 

  if (-30 < strength) {
    display.drawBitmap(10, cursor_y - 1, bars_3, 8, 8, 1);
  } else if ((-30 > strength) && ( -50 < strength)) {
    display.drawBitmap(10, cursor_y - 1, bars_2, 8, 8, 1);
  } else if ((-50 > strength) && (-60 < strength)) {
    display.drawBitmap(10, cursor_y - 1, bars_1, 8, 8, 1);
  } else {
    display.drawBitmap(10, cursor_y - 1, bars_0, 8, 8, 1);
  }
}

void writeln_on_display(String text) {
  display.setCursor(cursor_x, cursor_y);
  display.println(text);
}

void loop() {
  Serial.println("clear display ...");

  display.clearDisplay();
  display.drawRect(0, 0, 128, 16, WHITE);
  display.setTextColor(WHITE);
  display.setCursor(cursor_x, 4);
  display.println("available WIFI");

  cursor_y = Y_START_BLUE - 1;

  display.setTextColor(WHITE);
  
  Serial.println("Wifi scan started");

  int n = WiFi.scanNetworks();
  Serial.println("Wifi scan ended");

  if (n == 0) {
    Serial.println("no networks found");
  } else {
    Serial.print(n);
    Serial.println(" networks found");

    for (int i = 0; i < n; ++i) {
      Serial.print(i + 1);
      Serial.print(") ");
      Serial.print(WiFi.SSID(i));
      Serial.print(WiFi.RSSI(i));
      Serial.print("dBm ");
      
      draw_signal_strength(WiFi.RSSI(i));

      if(WiFi.encryptionType(i) == ENC_TYPE_NONE)
      {
          Serial.println(" <<***OPEN***>>");      
      }else{
          Serial.println();
          if (i < 6) {
            draw_lock();
          }
      }
      
      if (i < 6) {
        writeln_on_display(WiFi.SSID(i));

        cursor_y = cursor_y + 10;
      }

      delay(10);
    }
  }
  Serial.println("");
  display.display();

  delay(5000);
  WiFi.scanDelete();  
}